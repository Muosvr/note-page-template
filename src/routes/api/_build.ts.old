// import build from '../../build';
// import aesjs from 'aes-js';

// const aesKey = process.env.AES_KEY.split(' ').map(str => parseInt(str));

// export function post(req, res) {
//   const { githubUsername, author, userId, githubToken, email } = req.session;
//   const repoName = `${githubUsername.toLowerCase()}.github.io`;

//   let encryptedBytes = aesjs.utils.hex.toBytes(githubToken);
//   let aesCtr = new aesjs.ModeOfOperation.ctr(aesKey, new aesjs.Counter(5));
//   let decryptedBytes = aesCtr.decrypt(encryptedBytes);
//   let decryptedText = aesjs.utils.utf8.fromBytes(decryptedBytes);

//   res.json({success: true});
  
//   build({
//     userId,
//     repoOwner: githubUsername,
//     repoName,
//     repoHost: 'github.com',
//     author,
//     email: email || 'john_doe837903@noemail.com',
//     authToken: decryptedText
//   })
//     // .then(() => res.json({success: true}))
//     // .catch(err => res.status(500).send(err));
// };

// import { Page } from '../../models';
// import updatePageContentOnGithub from './_updatePageContentOnGithub';

// export function get(req, res) {
//   const pageId: string = req.query.pageId;
//   console.log('pageId', pageId);
//   let userId = process.env.USER_ID || req.session.userId;

//   let query: { pageId: string, owner: string, published?: boolean } = { pageId, owner: userId }

//   // if (process.env.PUBLISHED_ONLY){
//   //   query = { ...query, published: true}
//   // }

//   Page.findOne(query)
//     .then(page => {
//       // res.json(page)
//       return updatePageContentOnGithub(pageId, page);
//     })
//     .then(() => res.json({ 'success': true }))
//     .catch(err => {
//       res.json({'error': err.message})
//       console.log('Page.findOne error')
//     })
// }

// export function post(req, res) {
//   updatePageContentOnGithub(req.body)
//   .then(() => res.json({success: true}))
//   .catch(error => res.status(500).json({ error }));
// }